name: Build BoringSSL

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  # =============================================
  #  JOB: Build and Archive BoringSSL
  # =============================================
  build-boringssl:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Install Build Tools and NASM (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sudo apt-get update && sudo apt-get install -y git ninja-build nasm
          elif [[ "${{ runner.os }}" == "macOS" ]]; then
            brew install git ninja nasm
          fi
        shell: bash

      - name: Install NASM (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/setup-nasm@v1

      - name: Setup MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1

      - name: Clone BoringSSL Repository
        run: |
          git clone https://boringssl.googlesource.com/boringssl.git
          cd boringssl
          git checkout 9fc1c33e9c21439ce5f87855a6591a9324e569fd
        shell: bash

      - name: Build and Install BoringSSL (Linux/macOS)
        if: runner.os != 'Windows'
        run: |
          cd boringssl
          if [[ "${{ runner.os }}" == "Linux" ]]; then
            sed -i 's/-Werror//g' CMakeLists.txt
          fi
          cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=${{ github.workspace }}/boringssl-install
          cmake --build build --config Release
          cmake --install build
        shell: bash

      - name: Build and Install BoringSSL (Windows)
        if: runner.os == 'Windows'
        # FIX: Use PowerShell for Windows builds for better path handling
        shell: pwsh
        run: |
          cd boringssl
          cmake -S . -B build -G "Ninja" -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="${{ github.workspace }}/boringssl-install"
          cmake --build build --config Release
          cmake --install build

      # This is a crucial debugging step to ensure the installation was successful
      - name: Verify Installation Contents
        shell: pwsh
        run: |
          $install_path = "${{ github.workspace }}/boringssl-install"
          if (-not (Test-Path $install_path)) {
            Write-Error "Installation directory '$install_path' does not exist."
            exit 1
          }
          $item_count = (Get-ChildItem -Path $install_path -Recurse | Measure-Object).Count
          Write-Host "Found $item_count items in '$install_path'"
          if ($item_count -eq 0) {
            Write-Error "Installation directory is empty. Build may have failed."
            exit 1
          }
          # List the top-level contents for visual confirmation in logs
          Get-ChildItem -Path $install_path

      - name: Upload BoringSSL Artifact
        uses: actions/upload-artifact@v4
        with:
          name: boringssl-build-${{ runner.os }}
          path: ${{ github.workspace }}/boringssl-install